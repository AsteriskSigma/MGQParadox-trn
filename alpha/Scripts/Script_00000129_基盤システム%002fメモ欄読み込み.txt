=begin
=Infrastructure system/Memo field reading




==Change log
  Date     Version Author Comment
==14/12/13 2.0.0   Tris integration A to E A

=end

#==============================================================================
# ■ DataManager
#==============================================================================
class << DataManager
  #--------------------------------------------------------------------------
  # ● Load normal database EX
  #--------------------------------------------------------------------------
  def load_normal_database_ex
    ex_data = load_data("Data/DataEx.rvdata2")
    $data_actors        = ex_data[:actors]
    $data_classes       = ex_data[:classes]
    $data_skills        = ex_data[:skills]
    $data_items         = ex_data[:items]
    $data_weapons       = ex_data[:weapons]
    $data_armors        = ex_data[:armors]
    $data_enemies       = ex_data[:enemies]
    $data_troops        = ex_data[:troops]
    $data_states        = ex_data[:states]
    $data_animations    = ex_data[:animations]
    $data_tilesets      = ex_data[:tilesets]
    $data_common_events = ex_data[:common_events]
    $data_system        = ex_data[:system]
    $data_mapinfos      = ex_data[:mapinfos]
  end
  #--------------------------------------------------------------------------
  # ● Load database EX for battle test
  #--------------------------------------------------------------------------
  def load_battle_test_database_ex
    ex_data = load_data("Data/DataEx.rvdata2")
    $data_actors        = ex_data[:actors]
    $data_classes       = ex_data[:classes]
    $data_skills        = ex_data[:skills]
    $data_items         = ex_data[:items]
    $data_weapons       = ex_data[:weapons]
    $data_armors        = ex_data[:armors]
    $data_enemies       = ex_data[:enemies]
    $data_troops        = load_data("Data/BT_Troops.rvdata2")
    $data_states        = ex_data[:states]
    $data_animations    = load_data("Data/BT_Animations.rvdata2")
    $data_tilesets      = ex_data[:tilesets]
    $data_common_events = ex_data[:common_events]
    $data_system        = load_data("Data/BT_System.rvdata2")
  end
  #--------------------------------------------------------------------------
  # ● Save the analyzed database EX
  #--------------------------------------------------------------------------
  def save_analyzed_database_ex
    ex_data = {}
    ex_data[:actors]        = $data_actors
    ex_data[:classes]       = $data_classes
    ex_data[:skills]        = $data_skills
    ex_data[:items]         = $data_items
    ex_data[:weapons]       = $data_weapons
    ex_data[:armors]        = $data_armors
    ex_data[:enemies]       = $data_enemies
    ex_data[:troops]        = $data_troops
    ex_data[:states]        = $data_states
    ex_data[:tilesets]      = $data_tilesets
    ex_data[:animations]    = $data_animations
    ex_data[:common_events] = $data_common_events
    ex_data[:system]        = $data_system
    ex_data[:mapinfos]      = $data_mapinfos
    save_data(ex_data, "Data/DataEx.rvdata2")
    save_data($data_system.version_id, "Data/ExVersionID.rvdata2")
    
    p "DataEx.rvdata2I saved" if $TEST
  end
  #--------------------------------------------------------------------------
  # ● simultaneous memo column analysis of data class
  #--------------------------------------------------------------------------
  def nw_analyze_database
    $data_actors.compact.each{|a|a.nw_note_analyze}
    $data_classes.compact.each{|c|c.nw_note_analyze; c.learnings.each{|l|l.nw_note_analyze}}
    $data_skills.compact.each{|s|s.nw_note_analyze}
    $data_items.compact.each{|i|i.nw_note_analyze}
    $data_weapons.compact.each{|w|w.nw_note_analyze}
    $data_armors.compact.each{|a|a.nw_note_analyze}
    $data_enemies.compact.each{|e|e.nw_note_analyze}
    $data_states.compact.each{|s|s.nw_note_analyze}
    $data_tilesets.compact.each{|t|t.nw_note_analyze}
    # Narrow note erase in relation to script material
  end  
  #--------------------------------------------------------------------------
  # ○ Load normal database
  #--------------------------------------------------------------------------
  alias nw_base_load_normal_database load_normal_database
  def load_normal_database
    bm = Benchmark.new
    bm.start
if $TEST && (!FileTest.exist?("Data/ExVersionID.rvdata2") || load_data("Data/ExVersionID.rvdata2") != load_data("Data/System.rvdata2").version_id)
  nw_base_load_normal_database
  nw_analyze_database
  save_analyzed_database_ex
else
  nw_base_load_normal_database
  nw_analyze_database
end
    bm.stop
    p "Database read time is#{bm.elapsed}is" if $TEST
  end
  #--------------------------------------------------------------------------
  # ○ Load database for battle test
  #--------------------------------------------------------------------------
  alias nw_base_load_battle_test_database load_battle_test_database
  def load_battle_test_database
    bm = Benchmark.new
    bm.start
    if (!FileTest.exist?("Data/ExVersionID.rvdata2") || load_data("Data/ExVersionID.rvdata2") != load_data("Data/System.rvdata2").version_id)
      nw_base_load_normal_database  # Data_ExNormally you use a database to create
      nw_analyze_database
      save_analyzed_database_ex
    end
    load_battle_test_database_ex
    bm.stop
    p "Database read time is#{bm.elapsed}is" if $TEST
  end
end

#==============================================================================
# ■ RPG::BaseItem
#==============================================================================
class RPG::BaseItem
  #--------------------------------------------------------------------------
  # ● Mix-In
  #--------------------------------------------------------------------------
  include       NWFeature
  include       NWFeature::Flag
  include       NWFeature::Party
  include       NWFeature::PartyEx
  include       NWFeature::Battler
  include       NWFeature::Booster  
  #==============================================================================
  # ● Memo column analysis processing
  #==============================================================================
  def nw_note_analyze
    @data_ex = {}
    @add_features = []    
  end
  #--------------------------------------------------------------------------
  # ○ Feature array
  #--------------------------------------------------------------------------  
  def features
    @features + @add_features
  end
  #--------------------------------------------------------------------------
  # ● Feature array (basic)
  #--------------------------------------------------------------------------  
  def basic_features
    return @features
  end
end

#==============================================================================
# ■ RPG::Class::Learning
#==============================================================================
class RPG::Class::Learning
  #==============================================================================
  # ● Memo column analysis processing
  #==============================================================================
  def nw_note_analyze
  end
end

#==============================================================================
# ■ RPG::Map
#==============================================================================
class RPG::Map
  #==============================================================================
  # ● Memo column analysis processing
  #==============================================================================
  def nw_note_analyze
  end
end

#==============================================================================
# ■ RPG::Tileset
#==============================================================================
class RPG::Tileset
  #==============================================================================
  # ● Memo column analysis processing
  #==============================================================================
  def nw_note_analyze
  end
end

#==============================================================================
# ■ RPG::UsableItem
#==============================================================================
class RPG::UsableItem < RPG::BaseItem
  #==============================================================================
  # ● Memo column analysis processing
  #==============================================================================
  def nw_note_analyze
    super
    @effects_ex = []
  end
  #--------------------------------------------------------------------------
  # ○ Feature array
  #--------------------------------------------------------------------------  
  def features
    super
  end  
end

#==============================================================================
# ■ RPG::EquipItem
#==============================================================================
class RPG::EquipItem < RPG::BaseItem
  #==============================================================================
  # ● Memo column analysis processing
  #==============================================================================
  def nw_note_analyze
    super
  end
  #--------------------------------------------------------------------------
  # ○ Feature array
  #--------------------------------------------------------------------------  
  def features
    super
  end
end

#==============================================================================
# ■ RPG::Class
#==============================================================================
class RPG::Class < RPG::BaseItem
  #==============================================================================
  # ● Memo column analysis processing
  #==============================================================================
  def nw_note_analyze
    super
  end
  #--------------------------------------------------------------------------
  # ○ Feature array
  #--------------------------------------------------------------------------  
  def features
    super
  end
end

#==============================================================================
# ■ RPG::Actor
#==============================================================================
class RPG::Actor < RPG::BaseItem
  #==============================================================================
  # ● Memo column analysis processing
  #==============================================================================
  def nw_note_analyze
    super
  end
  #--------------------------------------------------------------------------
  # ○ Feature array
  #--------------------------------------------------------------------------  
  def features
    super
  end
end

#==============================================================================
# ■ RPG::Enemy
#==============================================================================
class RPG::Enemy < RPG::BaseItem
  #==============================================================================
  # ● Memo column analysis processing
  #==============================================================================
  def nw_note_analyze
    super
  end
  #--------------------------------------------------------------------------
  # ○ Feature array
  #--------------------------------------------------------------------------  
  def features
    super
  end
end

#==============================================================================
# ■ RPG::State
#==============================================================================
class RPG::State < RPG::BaseItem
  #==============================================================================
  # ● Memo column analysis processing
  #==============================================================================
  def nw_note_analyze
    super
  end
  #--------------------------------------------------------------------------
  # ○ Feature array
  #--------------------------------------------------------------------------  
  def features
    super
  end
end

#==============================================================================
# ■ RPG::Skill
#==============================================================================
class RPG::Skill < RPG::UsableItem
  #==============================================================================
  # ● Memo column analysis processing
  #==============================================================================
  def nw_note_analyze
    super
  end
  #--------------------------------------------------------------------------
  # ○ Feature array
  #--------------------------------------------------------------------------  
  def features
    super
  end
  #--------------------------------------------------------------------------
  # ○ Continuous times
  #--------------------------------------------------------------------------  
  def repeats
    super
  end
  #--------------------------------------------------------------------------
  # ○ Effect of use
  #--------------------------------------------------------------------------  
  def effects
    super
  end
end

#==============================================================================
# ■ RPG::Item
#==============================================================================
class RPG::Item < RPG::UsableItem
  #==============================================================================
  # ● Memo column analysis processing
  #==============================================================================
  def nw_note_analyze
    super
  end
  #--------------------------------------------------------------------------
  # ○ Feature array
  #--------------------------------------------------------------------------  
  def features
    super
  end
  #--------------------------------------------------------------------------
  # ○ Continuous times
  #--------------------------------------------------------------------------  
  def repeats
    super
  end
  #--------------------------------------------------------------------------
  # ○ Effect of use
  #--------------------------------------------------------------------------  
  def effects
    super
  end
end

#==============================================================================
# ■ RPG::Weapon
#==============================================================================
class RPG::Weapon < RPG::EquipItem
  #==============================================================================
  # ● Memo column analysis processing
  #==============================================================================
  def nw_note_analyze
    super
  end
  #--------------------------------------------------------------------------
  # ○ Feature array
  #--------------------------------------------------------------------------  
  def features
    super
  end
end

#==============================================================================
# ■ RPG::Armor
#==============================================================================
class RPG::Armor < RPG::EquipItem
  #==============================================================================
  # ● Memo column analysis processing
  #==============================================================================
  def nw_note_analyze
    super
  end
  #--------------------------------------------------------------------------
  # ○ Feature array
  #--------------------------------------------------------------------------  
  def features
    super
  end
end


