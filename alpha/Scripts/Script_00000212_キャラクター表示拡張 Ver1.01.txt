#==============================================================================
# ★ RGSS 3_Character display extension Ver1.01
#==============================================================================
=begin

Author: tomoaky
webSite: Tsukimoto(http://hikimoki.sakura.ne.jp/)

Add the following functions to the character sprite.
  Change to any magnification ratio
  Change to an arbitrary rotation angle
  · Scaling animation
  · Furafuraranimation
  · Circular motion animation

The following command can be used with the event command \"Script\".
  set_angle(event_id, angle)
    Change the rotation angle of the event with the specified ID to angle (0 to 360)

  set_zoom(event_id, zoom_x, zoom_y)
    Zoom the magnification rate of the event with the specified ID zoom_x, zoom_y Change to,
    zoom(1, 1.5, 3.0), Event ID 1 is set to 1 in the horizontal direction.5Double, vertical 3 times.
    zoom_y If omitted, zoom in both length and breadth_x Change to the value of
  
  set_zoom_anime(event_id, flag)
    Events with the specified ID will repeat expansion and contraction.
    flag If true, the function is on, if false it is off
    
  set_swing_anime(event_id, angle)
    Events with the specified ID will be swinging.
    angle Please specify the swing width (0 to 360), if you omit it will stop
  
  set_circle_anime(event_id, dist)
    Events with the specified ID will now make circular motion.
    dist Please specify the radius, if you omit it will stop.
    Since only sprites move, the position of the event does not change.
  
  set_cycle(event_id, cycle)
    Change the animation cycle of the event with the specified ID to cycle,
    There are three subjects to be targeted: enlargement / reduction animation, Furafura animation, circular movement animation.
    The initial value is 256

  event_id If 0 is specified for the event itself being executed,
  -1 If you specify, the player is eligible.

In addition to using script commands, you can use event names and annotation commands
It can also be set. Add the following character string to the event name or annotation.
  <zm 1.5, 2.0>... Setting the enlargement ratio, horizontal 1.5 times, vertical 2 times
  <an 45>... Set rotation angle, 45 degrees counterclockwise
  <za>... Enable scaling animation
  <sa 30>... Enable lifting animation, swing width 30 degrees
  <ca 16>... Enable circle animation animation, radius 16 dots
  <cy 128> ... Set animation cycle, 128 frames per lap
  
  When using the annotation command, be sure to set it at the top of the event execution content.
  
  
=== Caution ===
· The set parameters are initialized by changing the event page, etc.,
Please use the event command and event name and annotations well.


2011.12.21  Ver1.01
  · In parallel processing event_id Fixed bug that error occurred when 0 was specified
  
2011.12.15Ver1.0
  Release
  
=end

#==============================================================================
# ■ Game_Character
#==============================================================================
class Game_Character
  #--------------------------------------------------------------------------
  # ● Public instance variables
  #--------------------------------------------------------------------------
  attr_accessor :zoom_x                   # Expansion ratio in x direction
  attr_accessor :zoom_y                   # Magnification ratio in y direction
  attr_accessor :angle                    # rotation angle
  attr_accessor :zoom_anime               # Zoom animation flag
  attr_accessor :swing_anime              # Fluff flag
  attr_accessor :circle_anime             # Circular motion flag
  attr_accessor :ex_count_max             # Animation cycle
  #--------------------------------------------------------------------------
  # ● Initialization of public member variables
  #--------------------------------------------------------------------------
  alias tmsprex_game_character_init_public_members init_public_members
  def init_public_members
    tmsprex_game_character_init_public_members
    clear_ex_param
  end
  #--------------------------------------------------------------------------
  # ○ Initialize parameters for character extension
  #--------------------------------------------------------------------------
  def clear_ex_param
    @zoom_x = 1.0
    @zoom_y = 1.0
    @angle = 0
    @zoom_anime = false
    @swing_anime = nil
    @circle_anime = nil
    @ex_count_max = 256
  end
end

#==============================================================================
# ■ Game_Event
#==============================================================================
class Game_Event < Game_Character
  #--------------------------------------------------------------------------
  # ● Set up event page settings
  #--------------------------------------------------------------------------
  alias tmsprex_game_event_setup_page_settings setup_page_settings
  def setup_page_settings
    tmsprex_game_event_setup_page_settings
    clear_ex_param
    if @list
      if /<zm\s+(\d+(?:\.\d+)?)\s*\,\s*(\d+(?:\.\d+)?)>/i =~ @event.name
        @zoom_x, @zoom_y = $1.to_f, $2.to_f
      end
      @angle = $1.to_i if /<an\s*(\d+)>/i =~ @event.name
      @zoom_anime = true if /<za>/i =~ @event.name
      @swing_anime = $1.to_i if /<sa\s+(\d+)>/i =~ @event.name
      @circle_anime = $1.to_i if /<ca\s+(\d+)>/i =~ @event.name
      @ex_count_max = $1.to_i if /<cy\s+(\d+)>/i =~ @event.name
      @list.each do |list|
        if list.code == 108 || list.code == 408
          text = list.parameters[0]
          if /<zm\s+(\d+(?:\.\d+)?)\s*\,\s*(\d+(?:\.\d+)?)>/i =~ text
            @zoom_x, @zoom_y = $1.to_f, $2.to_f
          end
          @angle = $1.to_i if /<an\s*(\d+)>/i =~ text
          @zoom_anime = true if /<za>/i =~ text
          @swing_anime = $1.to_i if /<sa\s+(\d+)>/i =~ text
          @circle_anime = $1.to_i if /<ca\s+(\d+)>/i =~ text
          @ex_count_max = $1.to_i if /<cy\s+(\d+)>/i =~ text
        else
          break
        end
      end
    end
  end
end

#==============================================================================
# ■ Sprite_Character
#==============================================================================
class Sprite_Character < Sprite_Base
  #--------------------------------------------------------------------------
  # ● Object initialization
  #     viewport  : Viewport
  #     character : character (Game_Character)
  #--------------------------------------------------------------------------
  alias tmsprex_sprite_character_initialize initialize
  def initialize(viewport, character = nil)
    @ex_count = 0                         # Counter for special production
    tmsprex_sprite_character_initialize(viewport, character)
  end
  #--------------------------------------------------------------------------
  # ● Frame update
  #--------------------------------------------------------------------------
  alias tmsprex_sprite_character_update update
  def update
    tmsprex_sprite_character_update
    @ex_count = (@ex_count + 1) % @character.ex_count_max
    n = @character.ex_count_max / 2
    if @character.zoom_anime              # Updating zoom animation
      self.zoom_x = Math.sin(Math::PI * @ex_count / n) * 0.5 + 1.5
      self.zoom_y = self.zoom_x
    else
      self.zoom_x, self.zoom_y = @character.zoom_x, @character.zoom_y
    end
    if @character.swing_anime             # Renewal of status
      self.angle = Math.sin(Math::PI * @ex_count / n) * @character.swing_anime
    else
      self.angle = @character.angle
    end
    if @character.circle_anime            # Round motion status update
      a = Math::PI * @ex_count / n
      self.x += Math.sin(a) * @character.circle_anime
      self.y += Math.cos(a) * @character.circle_anime
    end
  end
end

#==============================================================================
# ■ Game_Interpreter
#==============================================================================
class Game_Interpreter
  #--------------------------------------------------------------------------
  # ○ Changing rotation angle of character sprite
  #--------------------------------------------------------------------------
  def set_angle(id, n = 0)
    target = get_character(id)
    target.angle = n if target
  end
  #--------------------------------------------------------------------------
  # ○ Change the enlargement ratio of the character sprite
  #--------------------------------------------------------------------------
  def set_zoom(id, zoom_x, zoom_y = nil)
    target = get_character(id)
    return unless target
    zoom_y ||= zoom_x
    target.zoom_x, target.zoom_y = zoom_x, zoom_y
  end
  #--------------------------------------------------------------------------
  # ○ Change the zoom animation of the character sprite
  #--------------------------------------------------------------------------
  def set_zoom_anime(id, flag = true)
    target = get_character(id)
    target.zoom_anime = flag if target
  end
  #--------------------------------------------------------------------------
  # ○ Changing the status of the character sprite
  #--------------------------------------------------------------------------
  def set_swing_anime(id, n = nil)
    target = get_character(id)
    return unless target
    target.swing_anime = n
    target.angle = 0 unless n
  end
  #--------------------------------------------------------------------------
  # ○ Change the circle motion state of the character sprite
  #--------------------------------------------------------------------------
  def set_circle_anime(id, n = nil)
    target = get_character(id)
    target.circle_anime = n if target
  end
  #--------------------------------------------------------------------------
  # ○ Change the extended animation cycle of the character sprite
  #--------------------------------------------------------------------------
  def set_cycle(id, n = 256)
    target = get_character(id)
    target.ex_count_max = n if target
  end
end



