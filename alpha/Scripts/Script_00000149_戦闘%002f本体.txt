=begin
=Battle related by nwapeg

It is a thing that merged scripts related to battle.


==Change log
  Date     Version Author Comment
==15/09/03 2.0.2   Tris integration J ~ U M

=end

#==============================================================================
# ■ Scene_Battle
#==============================================================================
class Scene_Battle < Scene_Base
  #--------------------------------------------------------------------------
  # ○ Frame update (basic)
  #--------------------------------------------------------------------------
  def update_basic
    super
    $game_timer.update
    $game_troop.update
    @spriteset.update
    update_info_viewport
    update_log_open
  end
  #--------------------------------------------------------------------------
  # ● Log window opening / closing management update processing
  #--------------------------------------------------------------------------
  def update_log_open
    if @message_window.open? || @info_viewport.visible
      @log_window.close if @log_window.open?
    else
      @log_window.open if @log_window.close?
    end
  end
  #--------------------------------------------------------------------------
  # ○ Create Message Window
  #--------------------------------------------------------------------------
  def create_message_window
    @message_window = Window_BattleMessage.new
  end
  #--------------------------------------------------------------------------
  # ○ End of Turn
  #--------------------------------------------------------------------------
  def turn_end
    all_battle_members.each do |battler|
      battler.on_turn_end
      refresh_status
      @log_window.display_auto_affected_status(battler)
      @log_window.wait_and_clear
    end
    BattleManager.turn_end
    process_event
    BattleManager.set_turn_end_skill
    process_action while BattleManager.gm_exist?
    # Command entry skipping when surrendering
    if BattleManager.giveup?
      if BattleManager.giveup_count_down
        actor = $game_actors[NWConst::Actor::LUCA]
        actor.add_state(actor.death_state_id)
        actor.orgasm_word.execute
        process_luca_orgasm
        BattleManager.process_defeat
      else
        $game_troop.make_actions
        turn_start
      end
    else
      start_party_command_selection
    end
  end
  #--------------------------------------------------------------------------
  # ○ Process at the end of battle action
  #--------------------------------------------------------------------------
  def process_action_end
    @subject.on_action_end
    refresh_status
    @log_window.display_auto_affected_status(@subject)
    @log_window.wait_and_clear
    @log_window.display_current_state(@subject)
    @log_window.wait_and_clear
    @log_window.display_damage(@subject, nil)
    @log_window.wait_and_clear
    BattleManager.judge_win_loss
  end
end












